/* ==UserStyle==
@name         Dark-Instagram
@namespace    gitlab.com/vednoc/dark-instagram
@description  Customizable dark and light theme for Instagram.
@author       vednoc <vednoc@pm.me> (https://gitlab.com/vednoc)
@homepageURL  https://gitlab.com/vednoc/dark-instagram
@supportURL   https://gitlab.com/vednoc/dark-instagram/issues
@updateURL    https://gitlab.com/vednoc/dark-instagram/raw/master/instagram.user.styl
@preprocessor stylus
@version      2.0.0
@license      MIT

@var text     ui_font    'Custom UI font' '"font_name"'
@var text     emoji_font 'Custom emoji font' '"font_name"'
@var checkbox ic_invert  'Enable icon inversion in dark mode' 1
@var checkbox enable_cm  'Enable right-click context menu' 1
@var checkbox enable_la  'Enable removal of logged-out annoyances' 1
@var checkbox enable_sb  'Enable theme scrollbars' 1

@var color    _dark      'Color: Primary background   ' #1f232a
@var color    _darken    'Color: Highlight background ' #252A33
@var color    _darker    'Color: Secondary background ' #333943
@var color    _light     'Color: Primary foreground   ' #e9e9e9
@var color    _lighter   'Color: Secondary foreground ' #a1a1a1
@var color    _accent    'Color: Accent               ' #7289da
@var color    _yellow    'Color: Yellow               ' #e5c512
@var color    _orange    'Color: Orange               ' #df4b16
@var color    _red       'Color: Red                  ' #dc322f
@var color    _magenta   'Color: Magenta              ' #f33682
@var color    _violet    'Color: Violet               ' #6c71c4
@var color    _blue      'Color: Blue                 ' #268bd2
@var color    _cyan      'Color: Cyan                 ' #2aa198
@var color    _green     'Color: Green                ' #859900
@var color    _white     'Color: White                ' #ffffff
@var color    _sh        'Color: Shadow light         ' #00000025
==/UserStyle== */

// Color mixin.
/// All colors: `c: fg bd bg;`
/// Only border-color: `c: 0 bd;`
c(x, y = 0, z = 0, xi = 1, yi = 1, zi = 1) {
    i = !important;
    if x is a 'call' or x is a 'rgba' {            color: xi is 0? x : x i }
    if y is a 'call' or y is a 'rgba' {     border-color: yi is 0? y : y i }
    if z is a 'call' or z is a 'rgba' { background-color: zi is 0? z : z i }
}
// SVG colors.
v(x, y = 0, xi = 1, yi = 1) {
    i = !important;
    if x is a 'call' or x is a 'rgba' {   fill: xi is 0? x : x i }
    if y is a 'call' or y is a 'rgba' { stroke: yi is 0? y : y i }
}
// Hack to convert HEX to RGB values.
to_rgb(input) {
    unquote(slice(s('%s', rgba(input, 0)), 5, -3))
}
// Border radius mixin.
rad() { border-radius: arguments }

@-moz-document regexp('^https?://(www\.)?instagram\.com(/.*)?$') {
    :root {
        /// Instagram variables.
        --b6a: to_rgb(_darker);     /// Global border colors.
        --b38: to_rgb(_darker);     /// Profile border colors.
        --ce3: to_rgb(_darker);     /// Post border colors.
        --ca6: to_rgb(_darker);     /// Login border colors.
        --d87: to_rgb(_darken);     /// Highlighted background.
        --b3f: to_rgb(_dark);       /// Primary background.
        --i1d: to_rgb(_light);      /// Main text color.
        --f75: to_rgb(_light);      /// Primary text.
        --f52: to_rgb(_lighter);    /// Secondary text.
        --bb2: to_rgb(_dark);       /// Post placeholder.
        --f23: to_rgb(_dark);       /// Dialogs.
        --fe0: to_rgb(_accent);     /// Links.
        --d69: to_rgb(_accent);     /// Post/login button.
        --c37: to_rgb(_accent);     /// Notifications.

        /// Theme variables.
        --note      : 'Dark-Instagram v2.0.0';
        --bshadow   : 0 2px 4px var(--shadow);
        --t         : transparent !important;
        --avatar    : a_radius;
        --ui-font   : ui_font, -apple-system, BlinkMacSystemFont, 'Segoe UI',
            Roboto, Helvetica, Arial, Ubuntu, Cantarell, 'Noto Sans',
            var(--emoji-font), sans-serif;
        --emoji-font: emoji_font, 'joypixels', 'Apple Color Emoji',
            'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
        --white     : _white;
        --dark      : _dark;
        --darken    : _darken;
        --darker    : _darker;
        --light     : _light;
        --lighter   : _lighter;
        --accent    : _accent;
        --shadow    : _shadow;
        --yellow    : _yellow;
        --orange    : _orange;
        --red       : _red;
        --magenta   : _magenta;
        --violet    : _violet;
        --blue      : _blue;
        --cyan      : _cyan;
        --green     : _green;

        /// Enable theme scrollbars.
        if ( enable_sb == 1 ) {
            scrollbar-color: #88888840 #88888815;
            ::-webkit-scrollbar {
                c: 0 0 #88888815;
                &-thumb { c: 0 0 #88888840 }
            }
        }
    }

    // Overwrite existing Stylus-lang vars with CSS vars.
    bg      = var(--dark);
    hl      = var(--darken);
    bd      = var(--darker);
    fg      = var(--light);
    cm      = var(--lighter);
    ac      = var(--accent);
    sh      = var(--shadow);
    bsh     = var(--bshadow);
    yellow  = var(--yellow);
    orange  = var(--orange);
    red     = var(--red);
    magenta = var(--magenta);
    violet  = var(--violet);
    blue    = var(--blue);
    cyan    = var(--cyan);
    green   = var(--green);
    white   = var(--white);
    t       = var(--t);
    outer   = 0 0 0 1px bd;
    inner   = inset outer;
    i       = !important;

    // App styles.
    body {
        c: fg 0 bg;

        /// Feat -> Custom UI font.
        &, button, input, textarea {
            font-family: var(--ui-font) i;
        }

        /// Loading.
        &[style *= 'background: white'] {
            c: 0 0 bg;
            svg { fill: cm i }
        }

        /// 404 page.
        &[class *= 'error'], &[class *= '404'] {
            .top-bar {
                c: fg bd hl;
                if ( ic_invert == 1 ) {
                    .logo { filter: invert(0.8) i }
                }
            }
            a, strong { c: ac }
        }

        /// Icons.
        svg {
            &[fill = '#262626'] { fill: cm }
            &[fill = '#ed4956'] { fill: red }
        }

        /// Feat -> Icon inversion in dark mode.
        if ( ic_invert == 1 ) {
            .coreSprite {
                &LoggedOutWordmark,
                &MobileNavDirect,
                &TaggedNull {
                filter: invert(0.8) i;
                }
                /// DMs -> Landing icon.
                /[class *= 'SpriteDirect'],
                /// Profile -> Follow.
                /[class *= 'SpriteFriend_'],
                /// Profile -> Options.
                /[class *= 'SpriteDropdownArrowGrey'],
                /// Profile -> IGTV icon.
                /[class *= 'SpriteProfileChannelNullState'],
                /// Settings -> Login activity.
                /[class *= 'SpriteLocation'],
                /// Posts -> Load more messages.
                /[class *= 'SpriteCircle'] {
                    filter: invert(0.8) i;
                }
            }
        }

        /// Login -> Links.
        ._2Lks6 { c: ac }

        /// Navbar -> Invert IG logo.
        if ( ic_invert == 1 ) {
            nav a[href = '/'] img {
                &, /[src *= 'logo.png'] { filter: invert(0.8) }
            }
        }

        /// Modals -> Tweak backdrop color.
        > [role = 'presentation'], > [role = 'dialog'] {
            background: unquote('rgba(var(--d87), 0.8)') i;
        }

        /// Feat -> Remove logged-out annoyances.
        if ( enable_la == 1 ) {
            /.not-logged-in {
                /// Remove login/signup bar.
                .N9d2H { display: none i }
                /// Remove login/signup prompt.
                &[style *= 'overflow: hidden'] {
                    overflow: unset i;
                    > [role = 'presentation'] { display: none i }
                }
            }
        }

        /// Search -> Hashtags | Sections.
        .LFGs8 { c: ac }
        .yQ0j1 { c: cm }

        /// Profile -> Avatar background.
        .M-jxE { &, > button { c: 0 0 hl }}

        /// Profile -> Private account alert.
        ._4Kbb_ {
            margin-top: 1rem;
            c: fg bd hl;
            /.hUQXy { &, &:visited { c: ac }}
        }

        /// Profile -> Empty profile alert.
        .jju9v {
            border: 1px solid bd;
            c: fg 0 hl;
        }

        /// Settings -> Fix borders.
        .rb9ad { c: 0 bd }

        /// Posts -> Related accounts.
        article + div + div.GZkEI {
            margin-top: 28px;
        }

        /// Posts -> Invert loading image.
        if ( ic_invert == 1 ) {
            .WidCF, .HaS-3 { filter: invert(0.8) i }
        }

        /// Posts -> Lightbox borders.
        [role = 'dialog'] {
            /body > ^[1..1] > ^[1..1] > ^[1..1] {
                border: 1px solid bd i;
                box-shadow: 0 0px 16px hl;
            }
        }

        /// Posts -> Context menu borders.
        > [role = 'presentation'] {
            > [role = 'dialog'] { border: 1px solid bd i }
            /// Hover styles.
            button.aOOlW:not(.SRPMb) {
                &:hover, &:active { c: 0 0 hl }
            }
        }

        /// Feat -> Enable right-click context menu.
        if ( enable_cm == 1 ) {
            /// Stories.
            img + div[style = 'height: 100%;'] {
                position: unset i;
                display: none i;
            }
            /// Images.
            ._9AhH0 { position: unset i }
            /// Videos.
            .PyenC, .fXIG0 { bottom: 40px i }
            /// Hide video preview image.
            ._8jZFn { position: unset i }
        }

        /// Footer -> Copyright.
        footer nav + span, .copyright {
            font-size: 0 i;
            c: cm;
            &::before {
                content: 'ðŸŒš ' var(--note) i;
                font-size: 14px i;
                text-transform: initial i;
            }
        }
    }
}
